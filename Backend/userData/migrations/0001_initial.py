# Generated by Django 4.2.1 on 2023-06-30 15:44

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(blank=True, max_length=64)),
                ('state', models.CharField(max_length=64)),
                ('zip_Code', models.IntegerField()),
                ('zone', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='Company_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_Name', models.CharField(max_length=100)),
                ('landline', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('special_Remarks', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Contact_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_Name', models.CharField(max_length=100)),
                ('landline', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory_Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ware_House_Code', models.CharField(max_length=10)),
                ('ware_House_Name', models.CharField(max_length=20)),
                ('location_1', models.TextField()),
                ('Zone', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=100)),
                ('min_Qty', models.CharField(max_length=100)),
                ('max_Qty', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('messageCode', models.CharField(max_length=10)),
                ('message', models.CharField(max_length=20)),
                ('addTime', models.DateTimeField(auto_now_add=True)),
                ('readTime', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoleHierarchy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('role', models.CharField(help_text='role_name', max_length=100, unique=True)),
                ('role_Created', models.DateTimeField(auto_now_add=True)),
                ('role_Modified', models.DateTimeField(auto_now=True)),
                ('reporting_role', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=240, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=20)),
                ('is_Active', models.BooleanField(default=True)),
                ('joining_Date', models.DateField(blank=True, null=True)),
                ('created_By', models.CharField(max_length=100)),
                ('modified_Person', models.CharField(blank=True, max_length=200, null=True)),
                ('reporting_Person', models.CharField(max_length=200)),
                ('registration_Date', models.DateField(auto_now_add=True)),
                ('last_Modified', models.DateTimeField(auto_now=True)),
                ('employee_Id', models.CharField(max_length=100)),
                ('web_User', models.BooleanField(default=False)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='userData.address')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='userData.role')),
            ],
            options={
                'verbose_name_plural': 'Employees',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adress_Details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userData.address')),
                ('company_Details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userData.company_details')),
                ('contact_Details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userData.contact_details')),
            ],
        ),
        migrations.AddField(
            model_name='company_details',
            name='sales_Person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='userData.employee'),
        ),
        migrations.CreateModel(
            name='user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=200, unique=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_Admin', models.BooleanField(default=False)),
                ('join_Count', models.IntegerField(blank=True, null=True)),
                ('employee', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user', to='userData.employee')),
                ('groups', models.ManyToManyField(related_name='users', to='auth.group')),
                ('notifications', models.ManyToManyField(related_name='user', to='userData.notification')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='Permited_user', to='auth.permission')),
            ],
            options={
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
